================SOLID=============

[S]ingle responsibility

Klasa powinna zajmować się tylko jedną rzeczą i dawać tylko jeden powód do
zmiany. Np. validator powinien tylko walidować, a nie jednocześnie nawiązywać połączenie lub
przekierowywać użytkownika po walidacji.

[O]pen/closed principle

Kod otwarty na rozszerzenia, ale zamknięty na modyfikacje, żeby nie trzeba było
modyfikować kilku miejsc, żeby zmienić jedną rzecz.
Np. jak masz if (), który sprawa różne typy i runuje jedną metodę.

[L]iskov substitution

Unikanie instance_ofów.


[I]nterface segregation.

Tworzenie interfejsów w taki sposób, żeby klasa nie musiała implementować metody, której nie
potrzebuje.


[D]ependency inversion

Nie powinniśmy się uzależniać od szczegółów implementacyjnych.


